############### Complete Media Server Apps Compose ###############

version: '3.7'
services:

########## Front-ends & Portals ##########

##### Nginx - Reverse Proxy

 nginx: 
   image: nginx:stable
   container_name: nginx
   hostname: nginx
   restart: always
   ports:
    - "80:80"
    - "443:443"
   environment:
    - TZ=${TZ}
    - PGID=${PGID}
    - PUID=${PUID}
   volumes:
    - $HOME/docker/nginx/config:/etc/nginx/conf.d
    - $HOME/docker/nginx/certs:/etc/letsencrypt    

##### Lets Encrypt - SSL Cert DNS Auto-renew

 ssl:
   image: adferrand/letsencrypt-dns
   container_name: ssl
   restart: always
   volumes:
     - "/var/run/docker.sock:/var/run/docker.sock"
     - "$HOME/docker/nginx/ssl/domains.conf:/etc/letsencrypt/domains.conf"
     - "$HOME/docker/nginx/certs/:/etc/letsencrypt"
   environment:
     - "LETSENCRYPT_USER_MAIL=$EMAIL"
     - "LEXICON_PROVIDER=$PROVIDER"
     - "LEXICON_PROVIDER_OPTIONS=$PROVIDER_OPTIONS"
     - "CERTS_DIRS_MODE=$DIRS_MODE"
     - "CERTS_FILES_MODE=$FILES_MODE"

 portainer:
   container_name: portainer
   hostname: portainer
   image: portainer/portainer:latest
   restart: always
   environment:
    - TZ=${TZ}        
    - PGID=${PGID}
    - PUID=${PUID}
   ports:
    - 127.0.0.1:9000:9000
   command: -H unix:///var/run/docker.sock
   volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    - "$HOME/docker/portainer:/config"

########## Downloaders & Proxies ##########

##### Deluge - Download Client with VPN

 deluge:
   container_name: deluge
   hostname: deluge
   image: holmes093/deluge
   restart: always
   ports:
    - 127.0.0.1:8112:8112
    - 127.0.0.1:8118:8118
    - 127.0.0.1:58846:58846
    - 127.0.0.1:58946:58946
   cap_add:
    - NET_ADMIN
   privileged: true
   environment:
    - TZ=${TZ}
    - PUID=${PUID}
    - PGID=${PGID}
    - UMASK=000
    - VPN_ENABLED=yes
    - VPN_PROV=custom
    - ENABLE_PRIVOXY=yes
    - LAN_NETWORK=              ## Local Area Network e.g. 192.168.0.0/24
    - DEBUG=false
   volumes:
    - $HOME/docker/deluge:/config
    - $HOME/docker/scripts:/scripts
    - $HOME/data/downloads:/downloads

##### Jackett - Torrent Proxy

 jackett:
   container_name: jackett
   hostname: jackett
   image: linuxserver/jackett:latest
   restart: always
   ports:
    - 127.0.0.1:9117:9117
   environment:
    - VIRTUAL_HOST=cardigann.htpc
    - TZ=${TZ}
    - PUID=${PUID}
    - PGID=${PGID}
   volumes:
    - $HOME/docker/cardigann:/config

##### Sonarr - TV Downloader

 sonarr:
   container_name: sonarr
   hostname: sonarr
   image: linuxserver/sonarr:latest
   restart: always
   ports:
    - 127.0.0.1:8989:8989
   environment:
    - TZ=${TZ}
    - PGID=${PGID}
    - PUID=${PUID}
   volumes:
    - $HOME/docker/sonarr:/config
    - $HOME/data/downloads:/downloads
    - $HOME/docker/scripts:/scripts
    - $HOME/data/fuse-tv:/tv
    - $HOME/data/clean-tv:/clean-tv

##### Radarr - Movie Downloader

 radarr:
   container_name: radarr
   hostname: radarr
   image: linuxserver/radarr:latest
   restart: always
   ports:
    - 127.0.0.1:7878:7878
   environment:
    - TZ=${TZ}
    - PGID=${PGID}
    - PUID=${PUID}
   volumes:
    - $HOME/docker/radarr:/config
    - $HOME/data/downloads:/downloads
    - $HOME/docker/scripts:/scripts
    - $HOME/data/fuse-m:/movies
    - $HOME/data/clean-movie:/clean-movie

########## Client Facing Applications ##########

##### Plex - Media Server

 plex:
   container_name: plex
   hostname: plex
   image: plexinc/pms-docker:plexpass
   restart: always
   privileged: true
   ports:
    - 127.0.0.1:32400:32400/tcp
    - 127.0.0.1:3005:3005/tcp
    - 127.0.0.1:8324:8324/tcp
    - 127.0.0.1:32469:32469/tcp
    - 127.0.0.1:1900:1900/udp
    - 127.0.0.1:32410:32410/udp
    - 127.0.0.1:32412:32412/udp
    - 127.0.0.1:32413:32413/udp
    - 127.0.0.1:32414:32414/udp
   environment:
    - TZ=${TZ}
    - PLEX_CLAIM=               ## https://www.plex.tv/claim
    - ADVERTISE_IP=             ## IP:PORT e.g. http://192.168.0.1:32400
    - PLEX_UID=1001
    - PLEX_GID=1001
   volumes:
    - $HOME/docker/plex:/config
    - $HOME/data/transcode:/transcode
    - $HOME/data/tmp:/tmp
    - $HOME/data/:/data
    - $HOME/data/sync:/config/Library/Application Support/Plex Media Server/Cache/Transcode
    - /dev/dri/:/dev/dri

 ombi:
   container_name: ombi
   hostname: ombi
   image: linuxserver/ombi:latest
   restart: always
   ports:
    - 127.0.0.1:3579:3579
   environment:
    - TZ=${TZ}
    - PGID=${PGID}
    - PUID=${PUID}
   volumes:
    - $HOME/docker/ombi:/config

########## Monitoring ##########

##### Tautulli - Plex Monitoring

 tautulli:
   container_name: tautulli
   hostname: tautulli
   image: shiggins8/tautulli
   restart: always
   ports:
    - 127.0.0.1:8181:8181
   environment:
    - TZ=${TZ}
    - PGID=${PGID}
    - PUID=${PUID}
   volumes:
    - $HOME/docker/tautulli:/config
    - $HOME/docker/plex/Library/Application Support/Plex Media Server/Logs:/logs

